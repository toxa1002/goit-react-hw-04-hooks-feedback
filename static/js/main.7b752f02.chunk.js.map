{"version":3,"sources":["components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Button/Button.module.css"],"names":["Button","buttonName","onClick","className","s","button","type","FeedbackOptions","options","onLeaveFeedback","buttomList","map","buttton","item","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","MockButtonFeadback","App","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","feedback","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAgBeA,MAbf,YAA0C,IAAxBC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,QAC1B,OACI,wBAAQC,UAAWC,IAAEC,OAAQH,QAASA,EAASI,KAAK,SAApD,SACKL,KCkBEM,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChC,OACI,oBAAIN,UAAWC,IAAEM,WAAjB,SACKF,EAAQG,KAAI,SAAAC,GAAO,OAChB,oBAAkBT,UAAWC,IAAES,KAA/B,SACI,cAAC,EAAD,CACIZ,WAAYW,EACZV,QAAS,kBAAIO,EAAgBG,OAH5BA,SCMVE,MAbf,YAAkD,IAA/BX,EAA8B,EAA9BA,UAAWY,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACjC,OACI,0BAASb,UAAWA,EAApB,UACI,6BAAKY,IACJC,MCgBEC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,qCACI,wCAAWJ,EAAX,OACA,2CAAcC,EAAd,OACA,uCAAUC,EAAV,OACA,wCAAWC,KACX,qDAAwBC,EAAxB,WCJNC,EAAqB,CAAC,OAAQ,UAAW,OAqDhCC,EAnDH,WACR,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEMC,EAAqBX,EAAOC,EAAUC,EAClCU,EAAkCC,KAAKC,MACjC,IAAPd,EAAcW,GAgBvB,OACQ,gCACI,cAAC,EAAD,CAASd,MAAM,wBAAf,SACG,cAAC,EAAD,CACKP,QAASe,EACTd,gBAjBK,SAAAwB,GACR,SAAbA,GACFP,EAAQR,EAAO,GAEA,YAAbe,GACFN,EAAWR,EAAU,GAEN,QAAbc,GACFL,EAAOR,EAAM,QAYH,cAAC,EAAD,CAASL,MAAM,aAAf,SACKc,EACG,cAAC,EAAD,CACIX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,EACPP,mBAAoBQ,IAGxB,0BC3CxBI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,OAAS,gCAAgC,KAAO,8BAA8B,WAAa,sC,kBCA7GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,8B","file":"static/js/main.7b752f02.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nfunction Button({ buttonName, onClick }) {\n    return (\n        <button className={s.button} onClick={onClick} type=\"button\">\n            {buttonName}\n        </button>\n    );\n}\n\nButton.propTypes = {\n    buttonName: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\nimport Button from '../Button';\n\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n    return (\n        <ul className={s.buttomList}>\n            {options.map(buttton => (\n                <li key={buttton} className={s.item}>\n                    <Button\n                        buttonName={buttton}\n                        onClick={()=>onLeaveFeedback(buttton)}\n                    ></Button>\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nFeedbackOptions.propTypes = {\n    buttonName: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Section({ className, title, children }) {\n    return (\n        <section className={className}>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    );\n}\n\nSection.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n        <>\n            <p>Good : {good} </p>\n            <p>Neutral : {neutral} </p>\n            <p>Bad : {bad} </p>\n            <p>Total: {total}</p>\n            <p>Positive feedback : {positivePercentage}%</p>\n        </>\n    );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React, { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\n\nconst MockButtonFeadback = ['good', 'neutral', 'bad'];\n\nconst App = () => { \n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const countTotalFeedback = good + neutral + bad;\n        const countPositiveFeedbackPercentage = Math.round(\n            (good * 100) / countTotalFeedback,\n        );\n\n    \n    const counterFeadbacks = feedback => {\n    if (feedback === 'good') {\n      setGood(good + 1);\n    }\n    if (feedback === 'neutral') {\n      setNeutral(neutral + 1);\n    }\n    if (feedback === 'bad') {\n      setBad(bad + 1);\n    }\n  };\n    \n    return (\n            <div>\n                <Section title=\"Please leave feedback\">\n                   <FeedbackOptions\n                        options={MockButtonFeadback}\n                        onLeaveFeedback={counterFeadbacks}\n                    />\n                </Section>\n                <Section title=\"Statistics\">\n                    {countTotalFeedback ? (\n                        <Statistics\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            total={countTotalFeedback}\n                            positivePercentage={countPositiveFeedbackPercentage}\n                        />\n                    ) : (\n                        'No feedback given'\n                    )}\n                </Section>\n            </div>\n        );\n}\n   \n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3Daub\",\"item\":\"FeedbackOptions_item__2MVbN\",\"buttomList\":\"FeedbackOptions_buttomList__3achG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Glna\",\"buttomList\":\"Button_buttomList__2C00b\"};"],"sourceRoot":""}